#
# zbrewsetenv: set up environment for configuration scripts
# IMPORTANT NOTE: zbrewsetenv needs to be SOURCED rather than just run, e.g. 
# Run the script as:
#   . zbrewsetenv
# as opposed to:
#   zbrewsetenv
#
#set -x
`whence sh >/dev/null 2>&1`
if [ $? -eq 0 ]; then
	abspath() {
		pgm="$1"
		relpgm=`whence ${pgm}`
		rc=$?
		if [ $rc -eq 0 ]; then
			abspath="$( cd "$( dirname "${relpgm}" )" >/dev/null 2>&1 && pwd )"
			echo "${abspath}"
		fi
		return $rc
	}
else
	abspath() {
		pgm="$1"
                typeinfo=`type -a "${pgm}" 2>/dev/null`
		rc=$?
		if [ $rc -eq 0 ]; then
                        relpgm=`echo "${typeinfo}" | awk '{ print $3; exit }'`
			abspath="$( cd "$( dirname "${relpgm}" )" >/dev/null 2>&1 && pwd )"
                        rc=$?
			echo "${abspath}"
		fi
                return $rc
	}
fi

if [ $# -gt 1 ] || [ "$1" = "-?" ]; then
	echo "Syntax: . zbrewsetenv [sw]" >&2
	echo "  Establish the zbrew environment for the sourcing script" >&2
	echo "  If <sw> is specified, then additionally search for \$ZBREW_WORKROOT/zbrew-<prefix>/<sw>/<sw>props.json" >&2
	echo "Example: Establish the zbrew environment, including Debug 14.2.0 specific environment variables:" >&2
	echo "  . zbrewsetenv eqae20" >&2
	return 4
fi
	
zbrewdir=`abspath zbrew`
if [ $? -gt 0 ]; then
	echo "zbrewsetenv: zbrew needs to be in your PATH if you do not specify <zbrew root directory>" >&2
	return 4
fi
zbrewroot="${zbrewdir%/*}"

. zbrewfuncs

export mydir=$(callerdir ${0})

props="${zbrewroot}/zbrewglobalprops.json"
zbrewpropse zbrew config "${props}"

if [ $# -eq 1 ]; then
	sw=$(echo $1 | tr '[:upper:]' '[:lower:]');
	ucsw=$(echo $1 | tr '[:lower:]' '[:upper:]');
	prefix=`echo ${sw} | awk '{print substr($0,0,3)}'`
	props="${ZBREW_WORKROOT}/zbrew-${prefix}/${sw}/${sw}props.json"
	zbrewpropse "${ucsw}" "config" "${props}"
fi
