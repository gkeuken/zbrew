#!/bin/sh

. zbrewfuncs
InvalidOption=1
TooFewParms=2
UnknownAction=3

#
# Temporary hack - replace with a proper message file
#
msg() {
	pgm=$1
	msgnum=$2
	msgtype=$3
	
	shift 3
	args=$*

	case ${msgnum} in 
		${InvalidOption}) msgtext="Invalid option specified: -";;
		${TooFewParms}) msgtext="Too few Parameters specified. Expected 2 but received: ";;
		${UnknownAction}) msgtext="Unknown action specified: ";;
		*) msgtext="Internal Error. Unknow msgnum: ${msgnum}";;
	esac
	echo "ZCL000"${msgnum}${msgtype} "${msgtext}${args}" >&2
}

#
# Temporary hack - replace with a manpage
#
syntax() {
	echo "\
smpapply [-vd] <prefix> <fmid list>
	    
Examples:
	smpapply igy630 HADB630 JADB63H JADB631 JADB632 <-- Perform SMP/APPLY on previously RECEIVEed product IGY630
" >&2 
	exit 16
}

runchk() {
	csi="$1"
	shift
	ptfs=$*

	tmpCntlHFS=${TMP}/$$.cntl.xml
	echo "  SET BOUNDARY(GLOBAL).
  LIST GZONE.
" >${tmpCntlHFS}
	
	LOG=${TMP}/$$.smplog
	touch ${LOG}

	OUT=${TMP}/$$.smpout
	touch ${OUT}

	RPT=${TMP}/$$.smprpt
	touch ${RPT}

	LIST=${TMP}/$$.smplist
        touch ${LIST}

        SYSPRINT=${TMP}/$$.sysprint
        touch ${SYSPRINT}   	

        mvscmdauth --pgm=gimsmp --smpcsi=${csi} --smplog=${LOG},mod --smpout=${OUT},mod --smprpt=${RPT},mod --sysprint=${SYSPRINT},mod --smplist=${LIST},mod --smpcntl=${tmpCntlHFS}
	rc=$?
 	if [ ${rc} -gt 0 ]; then
                echo "Unable to determine global zone for: ${csi}. See SYSPRINT: ${SYSPRINT}, SMPLOG: ${LOG}, SMPOUT: ${OUT}, SMPRPT: ${RPT}, SMPCNTL:${tmpCntlHFS} for details."
		return ${rc}
 	else
         	rm -rf ${LOG} ${OUT} ${RPT} ${SYSPRINT} ${tmpCntlHFS}
       	fi
	tgtzone=`cat ${LIST} | awk '{ if ($2=="TARGET" && NF==3) { print($1); } }'`
	rm ${LIST}
	if [ "${tgtzone}" = '' ]; then
		echo "Internal error. Unable to	determine global zone for: ${csi}. See SYSPRINT: ${SYSPRINT}, SMPLOG: ${LOG}, SMPOUT: ${OUT}, SMPRPT: ${RPT}, SMPCNTL:${tmpCntlHFS} for	details."
		return 16
	fi

	touch ${LOG} ${OUT} ${RPT} ${LIST} ${SYSPRINT}
	tmpCntlHFS=${TMP}/$$.cntl.xml
	echo "	SET BOUNDARY(${tgtzone}).
  LIST PTFS.
" >${tmpCntlHFS}
	mvscmdauth --pgm=gimsmp --smpcsi=${csi} --smplog=${LOG},mod --smpout=${OUT},mod --smprpt=${RPT},mod --sysprint=${SYSPRINT},mod --smplist=${LIST},mod --smpcntl=${tmpCntlHFS}
	rc=$?
	if [ ${rc} -gt 0 ]; then
		echo "Unable to determine global zone for: ${csi}. See SYSPRINT: ${SYSPRINT}, SMPLOG: ${LOG}, SMPOUT: ${OUT}, SMPRPT: ${RPT}, SMPCNTL:${tmpCntlHFS} for details."
	else
        #   	 rm -rf ${LOG} ${OUT} ${RPT} ${SYSPRINT} ${tmpCntlHFS}
	fi

	return ${rc}
}  
apply() {
	sw=$1
	out=`runapply CHECK $*`
	rc=$?
	if [ ${rc} -gt 0 ]; then
 		echo "SMP/E APPLY(CHECK) of ${sw} failed. ${out}" >&2
		return ${rc}
	fi

	out=`runapply NOCHECK $*`
	rc=$?
	echo "${out}"
	if [ ${rc} -gt 0 ]; then 
 		echo "SMP/E APPLY of ${sw} failed. ${out}" >&2
	fi

        return ${rc}
}

debug=0
verbose=0
opts=""
while getopts ":vd" opt; do
  case ${opt} in
    d )
      debug=1
      opts="${opts} -d"
      ;;
    v )
      verbose=1
      opts="${opts} -v"
      ;;
    \?)
      if [ ${OPTARG} != "?" ]; then
	msg zbrew ${InvalidOption} E "${OPTARG}"
      fi
      syntax
      exit 4
      ;;
  esac
done
shift $(expr $OPTIND - 1 )
if [ $# -lt 2 ]; then
	msg zbrew ${TooFewParms} E "$#"
	syntax
	exit 16
fi

mydir=$(callerdir ${0})
props="${mydir}/../properties/zbrew.properties"
. zbrewprops "${props}"
if [ $? -gt 0 ]; then
        echo "Internal Error. Unable to find ${props}" >&2
	exit 4
fi   

if [ -z "${TMP}" ]; then
	if [ -d /tmp ]; then
		TMP=/tmp
	else
		echo "Unable to set TMP. Please export TMP before running"
		exit 16
	fi
fi

if [ -d $TMP ]; then
	;
else
	echo "TMP environment variable is defined to ${TMP} but the directory does not exist. Please create directory or change environment variable."
	exit 16
fi

zosname=$(echo ${1} | tr '[:lower:]' '[:upper:]'); 
shift
fmids="$*"

out=`apply ${zosname} ${fmids}`; 
rc=$? 
if [ $rc -gt 0 ]; then
	echo "SMP/E APPLY failed with return code $rc" >&2
	echo "${out}" >&2
fi

exit $rc
