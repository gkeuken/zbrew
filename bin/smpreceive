#!/bin/sh

. zbrewfuncs
InvalidOption=1
TooFewParms=2
UnknownAction=3

#
# Temporary hack - replace with a proper message file
#
msg() {
	pgm=$1
	msgnum=$2
	msgtype=$3
	
	shift 3
	args=$*

	case ${msgnum} in 
		${InvalidOption}) msgtext="Invalid option specified: -";;
		${TooFewParms}) msgtext="Too few Parameters specified. Expected 2 but received: ";;
		${UnknownAction}) msgtext="Unknown action specified: ";;
		*) msgtext="Internal Error. Unknow msgnum: ${msgnum}";;
	esac
	echo "ZCL000"${msgnum}${msgtype} "${msgtext}${args}" >&2
}

#
# Temporary hack - replace with a manpage
#
syntax() {
	echo "\
smpreceive [-cvd] <prefix>
	-c: clean files before processing and clean temporary files after processing
	    
Examples:
	smpreceive igy630 <-- Perform SMP/RECEIVE on previously ORDERed product IGY630
" >&2 
	exit 16
}

receive() {
	sw="$1"
	tmpServerHFS=${TMP}/$$.server.xml
	tmpClientHFS=${TMP}/$$.client.xml
	tmpCntlHFS=${TMP}/$$.cntl.xml

	cat >${tmpClientHFS} <<zzz
  <CLIENT debug="YES"                                  
     javahome="${SMPE_JAVAHOME}"                    
     classpath="${SMPE_CLASSPATH}"                 
     downloadmethod="https"                            
     downloadkeyring="javatruststore"                        
     javadebugoptions="-Dcom.ibm.smp.debug=severe">    
 </CLIENT>    
zzz

	cat >${tmpServerHFS} <<zzz
  <SERVER
  host="${SMPE_FTPHOST}"
  user="${SMPE_FTPUSER}"
  pw="${SMPE_FTPPW}"
  >
  <PACKAGE
  file="${SMPE_FTPFILE}"
  hash="${SMPE_FTPHASH}"
  id="${SMPE_FTPID}"
  >
  </PACKAGE>
  </SERVER>
zzz

	cat >${tmpCntlHFS} <<zzz
  SET BDY(GLOBAL).
    RECEIVE FROMNETWORK(
      SERVER(SERVER)
      CLIENT(CLIENT)
    )
      .
zzz

	NTS=${TMP}/smpnts

	if [ ${clean} -gt 0 ]; then
		rm -rf ${NTS}
	fi
	mkdir -p ${NTS}

	smpout=`smp -i ${ZBREW_HLQ}${sw}G.GLOBAL.CSI -w ${TMP} -n ${NTS} -c ${tmpClientHFS} -s ${tmpServerHFS} <${tmpCntlHFS}`
	rc=$?
	if [ ${rc} -gt 0 ]; then
		echo "SMP/E RECEIVE of ${sw} failed." >&2
		echo "${smpout}" >&2
		echo "SMP/E RECEIVE INPUT Files have been retained: server:${tmpServerHFS} client:${tmpClientHFS} smpcntl:${tmpCntlHFS}" >&2
	else
		if [ ${clean} -gt 0 ]; then
			rm -rf ${NTS}
		fi
		rm ${tmpOrderHFS} ${tmpClientHFS} ${tmpCntlHFS}
	fi

	return ${rc} 
}

debug=0
verbose=0
clean=0
opts=""
while getopts ":cvd" opt; do
  case ${opt} in
    d )
      debug=1
      opts="${opts} -d"
      ;;
    c )
      clean=1
      opts="${opts} -c"
      ;;
    v )
      verbose=1
      opts="${opts} -v"
      ;;
    \?)
      if [ ${OPTARG} != "?" ]; then
	msg zbrew ${InvalidOption} E "${OPTARG}"
      fi
      syntax
      exit 4
      ;;
  esac
done
shift $(expr $OPTIND - 1 )
if [ $# -lt 1 ]; then
	msg zbrew ${TooFewParms} E "$#"
	syntax
	exit 16
fi

mydir=$(callerdir ${0})
props="${mydir}/../properties/zbrew.properties"
. zbrewprops "${props}"
if [ $? -gt 0 ]; then
        echo "Internal Error. Unable to find ${props}" >&2
	exit 4
fi   

mydir=$(callerdir ${0})
ussname=$(echo ${1} | tr '[:upper:]' '[:lower:]'); 
zosname=$(echo ${1} | tr '[:lower:]' '[:upper:]'); 
props="${ZBREW_ORDERROOT}/${ussname}.order"
. zbrewprops "${props}"
if [ $? -gt 0 ]; then
	echo "Internal Error. Unable to find ${props}" >&2
	exit 4
fi

if [ -z "${SMPE_JAVAHOME}" ]; then
	if [ -z "${JAVA_HOME}" ]; then
		javaloc=`whence java 2>/dev/null`
		if [ $? -eq 0 ]; then
			SMPE_JAVAHOME="$(dirname ${javaloc})/../"
		else 
			echo "Unable to set SMPE_JAVAHOME. Please export SMPE_JAVAHOME before running"
			exit 16 
		fi
	else 
		SMPE_JAVAHOME="${JAVA_HOME}"
	fi
fi
if [ -z "${SMPE_CLASSPATH}" ]; then
	if [ -d /usr/lpp/smp/classes ]; then
		SMPE_CLASSPATH="/usr/lpp/smp/classes"
	else 
		echo "Unable to set SMPE_CLASSPATH. Please export SMPE_CLASSPATH before running"
		exit 16 	
	fi
fi
if [ -z "${TMP}" ]; then
        if [ -d /tmp ]; then
         	TMP=/tmp
        else
       		echo "Unable to set TMP. Please export TMP before running"
                exit 16
        fi
fi
if [ -d ${SMPE_JAVAHOME} ]; then
	;
else
       	echo "SMPE_JAVAHOME environment variable is defined to ${SMPE_JAVAHOME} but the directory does not exist. Please create directory or change environment variable."
        exit 16
fi

if [ -d ${SMPE_CLASSPATH} ]; then
	;
else
       	echo "SMPE_CLASSPATH environment variable is defined to ${SMPE_JAVAHOME} but the directory does not exist. Please create directory or change environment variable."
        exit 16
fi

if [ -d $TMP ]; then
	;
else
       	echo "TMP environment variable is defined to ${TMP} but the directory does not exist. Please create directory or change environment variable."
        exit 16
fi
		
out=`receive ${zosname}`; 
rc=$? 
if [ $rc -gt 0 ]; then
	echo "SMP/E RECEIVE failed with return code $rc" >&2
	echo "${out}" >&2
fi

exit $rc
