#!/bin/sh
#set -x



out=$(whence zbrewfuncs >/dev/null)
if [ $? -eq 0 ]; then
	. zbrewfuncs
else
	echo "zbrew tools need to be in your PATH"
	exit 4
fi

InvalidOption=1
TooFewParms=2
UnknownAction=3
PrefixTooLong=4

#
# Temporary hack - replace with a proper message file
#
msg() {
        pgm=$1
        msgnum=$2
        msgtype=$3

        shift 3
        args=$*

        case ${msgnum} in
                ${InvalidOption}) msgtext="Invalid option specified: -";;
                ${TooFewParms}) msgtext="Too few Parameters specified. Expected 2 but received: ";;
                ${UnknownAction}) msgtext="Unknown action specified: ";;
                ${PrefixTooLong}) msgtext="Prefix must be 6 characters or less. Received: ";;
                *) msgtext="Internal Error. Unknow msgnum: ${msgnum}";;
        esac
        echo "ZCL000"${msgnum}${msgtype} "${msgtext}${args}" >&2
}

delds() {
        echo "$1" | awk '{ ds=$1; $1=""; if ($ds != "") { rc=system("drm -f " ds); if (rc > 0) { exit(rc); } } }'
        exit $?
}

crtds() {
	echo "$1" | awk '{ ds=$1; $1=""; attrs=$0; if ($ds != "") { rc=system("dtouch " attrs " " ds); if (rc > 0) { exit(rc); } } }'
	exit $?
}

crtzfs() {
	root="${ZFSROOT}"
	arg=0
	for zfsarg in ${1}; do
		arg=`expr ${arg} + 1`
		eval "zfsarg${arg}"="${zfsarg}"
	done
	zfsname="${zfsarg1}"
	primary="${zfsarg2}"
	secondary="${zfsarg3}"
	mountpnt=`echo "${zfsarg4}" | tr -d "\n"`
	middle="${ZFSDIR}"
	mkdir -p -m 755 ${root}${middle}${mountpnt}
	rc=$?
	if [ $rc -gt 0 ]; then
		echo "Error creating ${root}${middle} ZFS directory RC: $rc"
		exit $rc
	fi

	mvscmdauth --pgm=IDCAMS --sysprint='*' --sysin=stdin <<zzz
   DEFINE CLUSTER(NAME(${zfsname}) -
   LINEAR TRACKS(${primary} ${secondary}) SHAREOPTIONS(3))
zzz
	rc=$?
	if [ $rc -gt 0 ]; then
		echo "Error creating ZFS Linear Cluster:  $rc"
		exit $rc
	fi
	mvscmdauth --pgm=IOEAGFMT --args="-aggregate ${zfsname} -compat" --sysprint='*'
	rc=$?
	if [ $rc -gt 0 ]; then
		echo "Error formatting ZFS: $rc"
		exit $rc
	fi
	/usr/sbin/mount -t zfs -f ${zfsname} ${root}${middle}${mountpnt}
	rc=$?
	if [ $rc -gt 0 ]; then
		echo "Error mounting ZFS:  $rc"
		exit $rc
	fi
	exit 0
}

while getopts ":vdc" opt; do
  case ${opt} in
    c )
      clean=1
      ;;
    d )
      debug=1
      ;;
    v )
      verbose=1
      opts="-v"
      ;;
    \?)
      if [ ${OPTARG} != "?" ]; then
        msg smpconfig ${InvalidOption} E "${OPTARG}"
      fi
      syntax
      exit 4
      ;;
  esac
done
shift $(expr $OPTIND - 1 )
if [ $# -lt 1 ]; then
        msg smpconfig ${TooFewParms} E "$#"
        syntax
        exit 16
fi

mydir=$(callerdir ${0})

sw=$1
ussname=$(echo ${sw} | tr '[:upper:]' '[:lower:]');
zosname=$(echo ${sw} | tr '[:lower:]' '[:upper:]');
prefix=`echo "${ussname}" | awk '{ print substr($1, 0, 3) }'`

props="${mydir}/../../zbrew/properties/zbrewprops.json"
zbrewpropse zbrew config "${props}"

props="${mydir}/../../zbrew-${prefix}/${ussname}/${ussname}install.json"
zbrewpropse "${ussname}" install "${props}"

smpelibs="${mydir}/../../zbrew-${prefix}/${ussname}/${ussname}bom.json"
ussname=$(echo ${ussname} | tr '[:lower:]' '[:upper:]')

libs=`readbom ${ussname} <${smpelibs}`
rc=$?     
if [ $rc -gt 0 ]; then
	echo "${libs}"
	exit $rc
fi
# Obtain list of all Target and Distribution Datasets to allocate, exclude ZFS
ds=`echo "${libs}" | awk -v pfx="${ZBREW_HLQ}${ussname}." '($2 != "ZFS") {print pfx$1" -t"$2" -r"$3" -l"$4" -s"$5*56"K"}'`

if [ "${clean}" = "1" ]; then
	out=`delds "${ds}"`
	rc=$?
	if [ $rc -gt 0 ]; then
        	echo "Dataset cleanup failed. Installation aborted"
        	exit $rc
	fi
fi

out=`crtds "${ds}"`
rc=$?
if [ $rc -gt 0 ]; then
	echo "Dataset creation failed. Installation aborted"
	exit $rc
fi

# Obtain list of ZFS and allocate/mount
dsnl=`echo "${libs}" | awk -v pfx="${ZBREW_HLQ}${ussname}." '($2 == "ZFS") {print pfx""$1" "$3" "$4" "$7","}'`
ds=`echo "${libs}" | awk -v pfx="${ZBREW_HLQ}${ussname}." '($2 == "ZFS") {print pfx""$1" "$3" "$4" "$7","}' | tr -d "\n"`
zfscnt=`echo "${ds}" | awk -F, '{}END {print NF}'`

if [ "${clean}" = "1" ]; then
	/usr/sbin/unmount -R ${ZFSROOT}${ZFSDIR}
	out=`delds "${dsnl}"`
        rc=$?
        if [ $rc -gt 0 ]; then
                echo "ZFS cleanup failed. Installation aborted"
                exit $rc
        fi

fi

cntr=1
while [ $cntr -le $zfscnt ];  
do
        zfsds=`echo "${ds}" | awk -F, -v zfsv=$cntr '{print $zfsv}'`
        if [ "$zfsds" != "" ]; then
		zfsout=`crtzfs "${zfsds}"`
	fi
	cntr=`expr $cntr + 1`
done

if [ $rc -gt 0 ]; then
        echo "ZFS creation/mount failed. Installation aborted"
        exit $rc
fi

for l in $LEAVES; do
	mkdir -p -m 755 ${ZFSROOT}${ZFSDIR}${l} 
 	rc=$? 
 	if [ ${rc} -gt 0 ]; then
		exit $rc 
 	fi 
done 


exit 0
