#!/bin/sh
#set -x

out=$(whence zbrewfuncs >/dev/null)
if [ $? -eq 0 ]; then
	. zbrewfuncs
else
	echo "zbrew tools need to be in your PATH" >&2
	exit 4
fi


#for All but ZFS libraries
targ_dddefs(){
libs=`readbom ${zosname} <${smpelibs}`
rc=$?
if [ $rc -gt 0 ]; then
  exit $rc
fi

targdddefs=`echo "${libs}" | awk '($2 != "ZFS" && $7 == "T") {print $1}'` 
for targdddef in ${targdddefs}; do
 smpuclin="${smpuclin}
 REP DDDEF(${targdddef})
 DA(${ZBREW_HLQ}${zosname}.${targdddef})
 UNIT(SYSALLDA)
 WAITFORDSN
 SHR.
"
done

#for ZFS 
targdddefs=`echo "${libs}" | awk '($2 == "ZFS" && $5 == "T") {print $1}'`
for targdddef in ${targdddefs}; do
 smpuclin="${smpuclin}
 REP DDDEF(${targdddef})
 PATH('${ZFSROOT}${DDDEFPATH}').
"
done


#for CALLLIBS 
for targdddef in ${CALLLIBS}; do
 llq=`echo ${targdddef} | awk -F'.' '{print $2}'`
 smpuclin="${smpuclin}
  REP DDDEF(${llq})
  DA(${targdddef})
  UNIT(SYSALLDA)
  WAITFORDSN
  SHR.
"
done
}

dist_dddefs(){
libs=`readbom ${zosname} <${smpelibs}`
rc=$?
if [ $rc -gt 0 ]; then
  exit $rc
fi
distdddefs=`echo "${libs}" | awk '($7 == "D") {print $1}'`
for distdddef in ${distdddefs};do
 smpuclin="${smpuclin}
 REP DDDEF(${distdddef})
 DA(${ZBREW_HLQ}${zosname}.${distdddef})
 UNIT(SYSALLDA)
 WAITFORDSN
 SHR.
"

done
}


run_gimsmp(){
mvscmdauth --pgm=GIMSMP --smpcsi=${ZBREW_HLQ}${zosname}G.GLOBAL.CSI --sysprint=DUMMY --smprpt=DUMMY --smplist=DUMMY --smpcntl=stdin <<zzz
${smpuclin}
zzz
        rc=$?
        if [ $rc -gt 4 ]; then
		echo "GIMSMP failed with rc:$rc" >&2
		echo "${smpuclin}" >&2
                exit $rc
        fi
	exit 0

}


mydir=$(callerdir ${0})
prefix=$1
zosname=$2
shift 2
opts=$*

props="${mydir}/../../zbrew/properties/zbrewprops.json"
zbrewpropse zbrew config "${props}"

props=$(callerdir "$0")"/../../zbrew/properties/globalprops.json"
zbrewpropse zbrew global ${props}

props="${mydir}/../../zbrew-${prefix}/${zosname}/${zosname}install.json"
zbrewpropse "${zosname}" install "${props}"

smpelibs="${mydir}/../../zbrew-${prefix}/${zosname}/${zosname}bom.json"

zosname=$(echo ${zosname} | tr '[:lower:]' '[:upper:]')

# Update Target Zone DDDEFS, note Target Zone contains both Targ/Dist libraries
smpuclin="  SET   BDY(${zosname}T).
     UCLIN.
"
targ_dddefs
dist_dddefs
 
smpuclin="${smpuclin} 
     ENDUCL."
run_gimsmp



# Update Distribution Zone DDDEFS
smpuclin="  SET BDY(${zosname}D).
     UCLIN.
"
dist_dddefs
smpuclin="${smpuclin}
     ENDUCL."
run_gimsmp


exit 0
